function captureInfo=computeWarpPathsDtw(captureInfo,poseWarpPath,velWarpPath,accWarpPath,includeAngAcc)
    %warp path for pose
    [~,captureInfo.warpPaths.pose.(poseWarpPath.linCS).(poseWarpPath.linRB).(poseWarpPath.rotCS).(poseWarpPath.rotRB)] = ...
        dtwK2(captureInfo.mocap.(poseWarpPath.linCS).(poseWarpPath.linRB).pose.position.vector'...
        ,captureInfo.ndi.(poseWarpPath.linCS).(poseWarpPath.linRB).pose.position.vector',@euclideanDistance,...
        captureInfo.mocap.(poseWarpPath.rotCS).(poseWarpPath.rotRB).pose.quaternion',...
        captureInfo.ndi.(poseWarpPath.rotCS).(poseWarpPath.rotRB).pose.quaternion',@quatDistance);
    %warp path for velocity
    [~,captureInfo.warpPaths.velocity.(velWarpPath.linCS).(velWarpPath.linRB).(velWarpPath.rotCS).(velWarpPath.rotRB)] = ...
        dtwK2(captureInfo.mocap.(velWarpPath.linCS).(velWarpPath.linRB).velocity.linear.vector',...
        captureInfo.ndi.(velWarpPath.linCS).(velWarpPath.linRB).velocity.linear.vector',@euclideanDistance,... 
        captureInfo.mocap.(velWarpPath.rotCS).(velWarpPath.rotRB).velocity.angular.vector',...
        captureInfo.ndi.(velWarpPath.rotCS).(velWarpPath.rotRB).velocity.angular.vector',@euclideanDistance);
    %warp path for acceleration
    if includeAngAcc
        [~,captureInfo.warpPaths.acceleration.(accWarpPath.linCS).(accWarpPath.linRB).(accWarpPath.rotCS).(accWarpPath.rotRB)] = ...
        dtwK2(captureInfo.mocap.(accWarpPath.linCS).(accWarpPath.linRB).acceleration.linear.vector',...
        captureInfo.ndi.(accWarpPath.linCS).(accWarpPath.linRB).acceleration.linear.vector',@euclideanDistance,...
        captureInfo.mocap.(accWarpPath.rotCS).(accWarpPath.rotRB).acceleration.angular.vector',...
        captureInfo.ndi.(accWarpPath.rotCS).(accWarpPath.rotRB).acceleration.angular.vector',@euclideanDistance);
    else
        [~,captureInfo.warpPaths.acceleration.(accWarpPath.linCS).(accWarpPath.linRB).(accWarpPath.rotCS).(accWarpPath.rotRB)] = ...
        dtwK(captureInfo.mocap.(accWarpPath.linCS).(accWarpPath.linRB).acceleration.linear.vector',...
        captureInfo.ndi.(accWarpPath.linCS).(accWarpPath.linRB).acceleration.linear.vector',@euclideanDistance);
    end
end